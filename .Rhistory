n = 1000
n_perms = 10000
for(i in 1:n_perms){
y = plasma$trait_dist[-h]
y = y[sample(1:length(y), n)]
perms = c(perms, median(y))
}
perms
hist(perms)
hist(plasma$trait_dist[1:100])
hist(plasma$trait_dist[1:500])
hist(plasma$trait_dist[1:1000])
hist(plasma$trait_dist[1:2000])
View(plasma)
#Load tree
gft = read.newick('~/Desktop/congruified-gfts/OG0000018_congruified.newick_congruified.newick')
gft = read.newick('~/Desktop/congruified-gfts/OG0000018_congruified.newick')
plot(gft)
plsma
plasma
copehn
cophen
View(conservation_table)
grep("SPEF2", conservation_table$associated_gene)
conservation_table$associated_gene[grep("SPEF2", conservation_table$associated_gene),]
conservation_table[grep("SPEF2", conservation_table$associated_gene),]
DNALI1 = conservation_table[grep("DNALI1", conservation_table$associated_gene),]
DNALI1
SPEF2 = conservation_table[grep("SPEF2", conservation_table$associated_gene),]
write.csv(SPEF2, '~/Desktop/spef2.csv')
write.csv(DNALI1, '~/Desktop/DNALI1.csv')
?phylomorphospace
out = phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5,
control=list(col.node=cols),
xlab = paste("PC1", "(45.78%)"),
ylab = paste("PC2", ("7.73%")),
cex.axis = 1.5,
cex.lab = 1.5)
#Phylomorphospace
tree_nh = drop.tip(tree, 'Homo-sapiens')
x = pca$x[match(tree_nh$tip.label,
rownames(pca$x)),1:2]
#x = u$layout[match(tree_nh$tip.label,
#             rownames(u$layout)),1:2]
cols = species_colors[match(rownames(x),
names(species_colors))]
cols = c(cols, rep('grey90', tree_nh$Nnode))
names(cols) = 1:(length(tree_nh$tip)+tree_nh$Nnode)
phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5,
control=list(col.node=cols),
xlab = paste("PC1", "(45.78%)"),
ylab = paste("PC2", ("7.73%")),
cex.axis = 1.5,
cex.lab = 1.5)
#PCA
pca = prcomp(conservation_matrix)
plot(pca$x)
text(pca$x,
rownames(pca$x))
#UMAP
u = umap::umap(conservation_matrix,
verbose = TRUE)
plot(u$layout)
text(u$layout,
rownames(u$layout))
#Phylomorphospace
tree_nh = drop.tip(tree, 'Homo-sapiens')
x = pca$x[match(tree_nh$tip.label,
rownames(pca$x)),1:2]
#x = u$layout[match(tree_nh$tip.label,
#             rownames(u$layout)),1:2]
cols = species_colors[match(rownames(x),
names(species_colors))]
cols = c(cols, rep('grey90', tree_nh$Nnode))
names(cols) = 1:(length(tree_nh$tip)+tree_nh$Nnode)
phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5,
control=list(col.node=cols),
xlab = paste("PC1", "(45.78%)"),
ylab = paste("PC2", ("7.73%")),
cex.axis = 1.5,
cex.lab = 1.5)
out = phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5,
control=list(col.node=cols),
xlab = paste("PC1", "(45.78%)"),
ylab = paste("PC2", ("7.73%")),
cex.axis = 1.5,
cex.lab = 1.5)
out
plot(out$xx, out$yy)
#Phylomorphospace
tree_nh = drop.tip(tree, 'Homo-sapiens')
x = pca$x[match(tree_nh$tip.label,
rownames(pca$x)),3:4]
#x = u$layout[match(tree_nh$tip.label,
#             rownames(u$layout)),1:2]
cols = species_colors[match(rownames(x),
names(species_colors))]
cols = c(cols, rep('grey90', tree_nh$Nnode))
names(cols) = 1:(length(tree_nh$tip)+tree_nh$Nnode)
phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5,
control=list(col.node=cols),
xlab = paste("PC1", "(45.78%)"),
ylab = paste("PC2", ("7.73%")),
cex.axis = 1.5,
cex.lab = 1.5)
euc.dist <- function(vect1, vect2) sqrt(sum((vect1 - vect2)^2))
euc.dist(out$xx, out$yy)
euc.dist(out$xx[1], out$yy[1])
pos = rbind(out$xx, out$yy)
apply(pos, 1, function(x) euc.dist(x))
apply(pos, 1, function(x) euc.dist(x[1], x[2]))
apply(pos, 2, function(x) euc.dist(x[1], x[2]))
pos
?apply
mean(apply(pos, 2, function(x) euc.dist(x[1], x[2])))
eucs = c()
for(i in 1:10){
x = pca$x[match(tree_nh$tip.label,
rownames(pca$x)),i:(i+1)]
out = phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5)
pos = rbind(out$xx, out$yy)
eucs = c(eucs, mean(apply(pos, 2, function(x) euc.dist(x[1], x[2]))))
}
eucs
eucs = c()
for(i in 1:10){
x = pca$x[match(tree_nh$tip.label,
rownames(pca$x)),i:(i+1)]
out = phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5)
pos = rbind(out$xx, out$yy)
eucs = c(eucs,
sd(apply(pos, 2, function(x) euc.dist(x[1], x[2]))))
}
ecus
eucas
eucs
eucs = c()
for(i in 1:10){
x = pca$x[match(tree_nh$tip.label,
rownames(pca$x)),i:(i+1)]
out = phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5)
pos = rbind(out$xx, out$yy)
eucs = c(eucs,
sd(apply(pos, 2, function(x) euc.dist(x[1], x[2])))/
mean(apply(pos, 2, function(x) euc.dist(x[1], x[2]))))
}
euc
eucs
eucs = c()
for(i in 1:20){
x = pca$x[match(tree_nh$tip.label,
rownames(pca$x)),i:(i+1)]
out = phylomorphospace(tree_nh,
x,
ftype="off",
node.by.map=TRUE,
node.size = 1.5)
pos = rbind(out$xx, out$yy)
eucs = c(eucs,
sd(apply(pos, 2, function(x) euc.dist(x[1], x[2])))/
mean(apply(pos, 2, function(x) euc.dist(x[1], x[2]))))
}
plot(eucs)
cophen
pca$x
x = cophen[match(rownames(pca$x),
names(cophen))]
x
cor(x, pca$x)
cor(x, pca$x, use = 'complete.obs')
conservation_matrix_binary = conservation_matrix
conservation_matrix_binary[conservation_matrix_binary>0] = 1
pca$rotation
plot(pca$rotation[,1])
plot(pca$rotation[,2])
cor(pca$rotation[,1], conservation_matrix)
cor(pca$rotation[,1], t(conservation_matrix))
cor(pca$rotation[1,], conservation_matrix)
dim(pca$rotation)
dim(conservation_matrix)
cor(pca$rotation, t(conservation_matrix_binary))
conservation_matrix_binary
sum(conservation_matrix_binary)
table(conservation_matrix_binary)
conservation_matrix_binary = conservation_matrix
conservation_matrix[1,]
conservation_matrix[,1]
conservation_matrix == 0
conservation_matrix[conservation_matrix == 0,]
length(conservation_matrix == 0)
length(conservation_matrix > 0)
sum(conservation_matrix > 0)
sum(conservation_matrix == 0)
#Distance of species within binary conservation matrix
conservation_matrix_binary = conservation_matrix
conservation_matrix_binary[conservation_matrix_binary == max(conservation_matrix_binary)] = 0
conservation_matrix_binary[!conservation_matrix_binary = 0] = 1
conservation_matrix_binary[!conservation_matrix_binary == 0] = 1
table(conservation_matrix_binary)
conservation_matrix_binary = conservation_matrix
conservation_matrix_binary[conservation_matrix_binary == max(conservation_matrix_binary)] = 0
conservation_matrix_binary[conservation_matrix_binary > 0] = 1
table(conservation_matrix_binary)
plot(pca$x[,1])
plot(pca$x[,2])
plot(pca$x[,3])
plot(pca$x[,4])
plot(pca$x[,5])
plot(pca$x[,6])
x = cophen[match(rownames(pca$x),
names(cophen))]
cor(x, pca$x, use = 'complete.obs')
coconservation_species$
sdgsed
conservation_species[[1]]
lapply(conservation_species, function(x) nrow(x))
n_ogs
n_ogs_per_species
n_ogs_per_species
cor(n_ogs_per_species,
pca$x[match(names(n_ogs_per_species),
rownames(pca$x)),1]
)
cor(n_ogs_per_species,
pca$x[match(names(n_ogs_per_species),
rownames(pca$x)),])
cor.test(n_ogs_per_species,
pca$x[match(names(n_ogs_per_species),
rownames(pca$x)),])
cor.test(n_ogs_per_species, pca$x[match(names(n_ogs_per_species),
rownames(pca$x)),1])
cor.test(n_ogs_per_species, pca$x[match(names(n_ogs_per_species),
rownames(pca$x)),2])
cor.test(n_ogs_per_species, pca$x[match(names(n_ogs_per_species),
rownames(pca$x)),3])
cor.test(n_ogs_per_species, pca$x[match(names(n_ogs_per_species),
rownames(pca$x)),4])
cor.test(n_ogs_per_species, pca$x[match(names(n_ogs_per_species),
rownames(pca$x)),5])
cor.test(x, pca$x[,1])
cor.test(x, pca$x[,2])
cor.test(x, pca$x[,3])
cor.test(x, pca$x[,4])
cor.test(x, pca$x[,5])
apply(pca$x, 2, function(x) cor.test(x, x))
apply(pca$x, 2, function(y) cor.test(x, y))
res = apply(pca$x, 2, function(y) cor.test(x, y))
lapply(res, function(x) x$p.value)
unlist(lapply(res, function(x) x$p.value))
signif(unlist(lapply(res, function(x) x$p.value)), 3)
plot((unlist(lapply(res, function(x) x$p.value))
)
)
res = apply(pca$x, 2, function(y) cor.test(n_ogs_per_species,, y))
res = apply(pca$x, 2, function(y) cor.test(n_ogs_per_species, y))
#Correlation between ortholog n and PC1
res = apply(pca$x, 2, function(y) cor.test(n_ogs_per_species,
y[match(names(n_ogs_per_species),
rownames(pca$x)])))
#Correlation between ortholog n and PC1
res = apply(pca$x, 2, function(y) cor.test(n_ogs_per_species,
y[match(names(n_ogs_per_species),ownames(pca$x)])))
res = apply(pca$x, 2, function(y) cor.test(n_ogs_per_species,
y[match(names(n_ogs_per_species),
rownames(pca$x)])))
res = apply(pca$x, 2, function(y) cor.test(n_ogs_per_species, y[match(names(n_ogs_per_species),
rownames(pca$x))]))
res
plot(unlist(lapply(res, function(x) x$p.value)))
0.05*64
0.05/64
abline(h = 0.0007)
x = cophen[match(rownames(pca$x),
names(cophen))]
res = apply(pca$x, 2, function(y) cor.test(x, y))
res
res$PC1
res$PC1$p.value
res = apply(pca$x, 2, function(y) cor.test(n_ogs_per_species, y[match(names(n_ogs_per_species),
rownames(pca$x))]))
res$PC1$p.value
all_elo_iterations = readRDS('out/elo_permutations.RDS')
m = rowMeans(all_elo_iterations)
m
m = sort(m)
m
d = m[length(m)] - m[1]
d
elo::elo.prob(length(m), m[1])
elo::elo.prob(m[length(m)], m[1])
elo::elo.prob(m[length(m)], m[2])
elo::elo.prob(m[length(m)], m[1])
elo::elo.prob(m[grep('Paramecium', names(m))], m[1])
1618-1414
m
n_ogs_per_species
plot(n_ogs_per_species,
m[match(names(n_ogs_per_species))])
plot(n_ogs_per_species,
m[match(names(n_ogs_per_species),
names(m))])
mod = lm(m[match(names(n_ogs_per_species),
names(m))]~
n_ogs_per_species)
summary(mod)
mod
mod$residuals
plot(mod$residuals)
sort(mod$residuals)
cooks.distance(mod)
sort(cooks.distance(mod))
MASS::studres(mod)
sort(MASS::studres(mod))
n = metadata$taxogroup2_unieuk
n
n[!n == 'Vertebrata'] = 'non'
n
mean(n[n == 'Vertebrata'])
#Non vertebrate vs. vetebrate elo
n = metadata$taxogroup2_unieuk[match(names(m),
metadata$genus.species)]
n[!n == 'Vertebrata'] = 'non'
n
mean(m[n == 'Vertebrata'])
mean(m[n == 'non'])
median(m[n == 'Vertebrata'])
median(m[n == 'non'])
n = metadata$taxogroup2_unieuk[match(names(m),
metadata$genus.species)]
median(m[n == 'Vertebrata'])
#1571.394
median(m[!n == 'Vertebrata'])
n
metadata$taxogroup1_unieuk
n = metadata$taxogroup1_unieuk[match(names(m),
metadata$genus.species)]
median(m[n == 'Metazoa'])
#1571.394
median(m[!n == 'Metazoa'])
#1478.744
m
elo::elo.prob(m[grep('Chlorella', names(m))], m[1])
elo::elo.prob(m[grep('Chlorella', names(m))],
m[grep('Chlamydomonas', names(m))])
mod$residuals
MASS::studres(mod)
MASS::studres(mod)
sort(MASS::studres(mod))
res = sort(MASS::studres(mod))
summary(mod)
mod
slope(mod)
mod
coeff(mod)
mod$coefficients
plot(mod$fitted.values)
coef(mod)
res = sort(MASS::studres(mod))
res
res
n = metadata$taxogroup2_unieuk[match(names(res),
metadata$genus.species)]
n
kruskal.test(n)
kruskal.test(split(res, n))
n = split(res, n)
lapply(n, function(x) mean(x))
sort(unlist(lapply(n, function(x) mean(x))))
table(n)
n = metadata$taxogroup2_unieuk[match(names(res),
metadata$genus.species)]
table(n)
n = metadata$taxogroup1_unieuk[match(names(res),
metadata$genus.species)]
n = split(res, n)
kruskal.test(split(res, n))
n
sort(unlist(lapply(n, function(x) mean(x))))
sort(unlist(lapply(n, function(x) median(x))))
boxplot(n)
boxplot(n, las = 2)
metadata$Phylum
res
n = metadata$taxogroup1_unieuk[match(names(res),
metadata$genus.species)]
n
table(n)
View(metadata)
uni = metadata$n_cells
uni
View(metadata)
uni[is.na(uni)] = 100
uni
uni = metadata$n_cells
uni[is.na(uni)] = 100
names(uni) = metadata$genus.species
uni[uni == 1] = 'uni'
uni[!uni == 'uni'] = 'non'
uni
uni = uni[match(names(m), names(uni))]
uni
uni = split(m, uni)
uni
lapply(uni, function(x) mean(x))
lapply(uni, function(x) sd(x))
metadata$n_cells
max(uni$non)
max(uni$uni)
min(uni$non)
min(uni$uni)
1564-1414
1618-1455
lapply(uni, function(x) var(x))
lapply(uni, function(x) sd(x)/mean(x))
kruska.test(uni)
kruskal.test(uni)
uni
m
cophen
p = rep(NA, length(m))
p = rep(NA, length(m))
p
p = rep(NA, length(m))
x = cophen[match(names(m),
names(cophen))]
p[x<1130] = 'young'
p
p[x<1130] = 'young'
p[x>1130 & x<2000] = 'mid'
p[x>2000] = 'old'
p
x[48]
cophen
p = split(m, p)
p
kruskal.test(p)
install.packages("dunn.test")
dunn.test::dunn.test(p)
d_test = dunn.test::dunn.test(p)
d_test
kruskal.test(list(p$young, c(p$mid, p$old)))
kruskal.test(list(p$mid, p$old))
kruskal.test(list(p$old, c(p$mid, p$young)))
cophen
p = rep(NA, length(m))
x = cophen[match(names(m),
names(cophen))]
p[x<3000] = 'old'
p[x<1700 & x>1200] = 'invert'
p = split(m, p)
kruskal.test(list(p$invert,
p$old))
sort(unlist(lapply(n, function(x) median(x))))
#Compare by taxonomic group
n = metadata$taxogroup1_unieuk[match(names(res),
metadata$genus.species)]
n = split(res, n)
kruskal.test(split(res, n))
sort(unlist(lapply(n, function(x) median(x))))
"SMA"
og_slopes$
sdgsd
View(conservation_table)
grep("SMA", conservation_table$associated_gene)
grep("^SMA", conservation_table$associated_gene)
grep("^SMA$", conservation_table$associated_gene)
grep("$SMA^", conservation_table$associated_gene)
grep("$3HIDH^", conservation_table$associated_gene)
grep(^3HIDH", conservation_table$associated_gene)
grep("3HIDH", conservation_table$associated_gene)
grep("ABCA12", conservation_table$associated_gene)
grep("ARF3", conservation_table$associated_gene)
grep("SMA", conservation_table$associated_gene)
conservation_table[grep("SMA", conservation_table$associated_gene),]
x = conservation_table[grep("SMA", conservation_table$associated_gene),]
View(x)
x = conservation_table[grep("SMN1", conservation_table$associated_gene),]
x
plot(x$complexity, x$trait_dist)
View(x)
